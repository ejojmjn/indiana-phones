---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars:

  tasks:

  - debug: { msg: "{{ ansible_architecture }}" }
  - debug: { msg: "{{ ansible_os_family }}" }





  - name: Install InfluxDB
    block:
      - name: Add apt key (https://repos.influxdata.com/influxdb.key)
        apt_key:
          url: https://repos.influxdata.com/influxdb.key
          state: present      
      - name: Add InfluxDB repo (deb https://repos.influxdata.com/debian stretch stable)
        apt_repository:
          repo: deb https://repos.influxdata.com/debian stretch stable
          state: present
          update_cache: yes
      - name: Install InfluxDB
        apt:
          name: influxdb
        environment:
          RUNLEVEL: 1
      - name: Enable unix socket domain
        lineinfile:
          path: /etc/influxdb/influxdb.conf
          regexp: '^.*unix-socket-enabled'
          line: unix-socket-enabled = true
      - name: Make InfluxDB run as root (for Unix socket domain)
        lineinfile: 
          path: /lib/systemd/system/influxdb.service
          regexp: ^User=
          line: User=root
      - name: Make InfluxDB run as root group (for Unix socket domain)
        lineinfile: 
          path: /lib/systemd/system/influxdb.service
          regexp: ^Group=
          line: Group=root
        when: ansible_architecture == "x86_64"
      - name: Start InfluxDB service
        systemd: 
          name: influxdb
          state: restarted
          daemon_reload: yes
          enabled: yes

  - name: Install Telegraf telemetry agent
    block:
      - name: get the rpm package facts
        package_facts:
          manager: "auto"

      - name: Add apt key (https://repos.influxdata.com/influxdb.key)
        apt_key:
          url: https://repos.influxdata.com/influxdb.key
          state: present      
      - name: Add InfluxDB repo (https://repos.influxdata.com/influxdb.key)
        apt_repository:
          repo: deb https://repos.influxdata.com/debian stretch stable
          state: present
          update_cache: yes
      - name: Install Telegraf
        apt:
          name: telegraf
        environment:
          RUNLEVEL: 1
        when: "'telegraf:amd64' not in ansible_facts.packages"

      - name: Configure Telegraf to use Unix sockets
        lineinfile:
          path: /etc/telegraf/telegraf.conf
          regexp: '^.*var/run/influxdb.sock'
          line: 'urls = ["unix:///var/run/influxdb.sock"]'

      - name: Start InfluxDB service
        systemd: 
          name: telegraf
          state: restarted
          daemon_reload: yes
          enabled: yes

      - name: Install Telegraph for ARM from tarball
        unarchive:
          src: https://dl.influxdata.com/influxdb/releases/influxdb-1.7.1_linux_armhf.tar.gz
          dest: /
          remote_src: yes
          extra_opts: [--strip-components=1]
        when: ansible_architecture == "armv7l"

  - name: Install Grafana
    block:
      - name: Add apt key (https://packagecloud.io/gpg.key)
        apt_key:
          url: https://packagecloud.io/gpg.key
          state: present      
      - name: Add Grafana repo (deb https://packagecloud.io/grafana/stable/debian stretch main)
        apt_repository:
          repo: deb https://packagecloud.io/grafana/stable/debian stretch main
          state: present
          update_cache: yes
      - name: Install Grafana
        apt:
          name: grafana:amd64
          force: yes
          allow_unauthenticated: yes
      - name: Start Grafana
        systemd: 
          name: grafana-server
          state: restarted
          daemon_reload: yes
          enabled: yes